{
  "name": "co-mongo",
  "version": "0.0.2",
  "description": "A mongodb wrapper that plays nicely with [co](https://github.com/visionmedia/co).",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "author": {
    "name": "Thom Seddon"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/thomseddon/co-mongo"
  },
  "license": "MIT",
  "dependencies": {
    "mongodb": "~1.3.23"
  },
  "devDependencies": {
    "mocha": "~1.17.1",
    "should": "~3.1.2",
    "co": "~3.0.2"
  },
  "readme": "# co-mongo\n\nA mongodb wrapper that plays nicely with [co](https://github.com/visionmedia/co).\n\nThis is project has two goals:\n * Maintain exact compatibility with the mongodb module, what ever mongo returns in it's callback is what gets returned when you yield\n * Add a few convenience methods to make handling connections easier (see below)\n\n## Install\n\n```\nnpm install co-mongo\n```\n\n## Example\n\n```js\nvar comongo = require('co-mongo');\nvar co = require('co');\n\nco(function *() {\n  var db = yield comongo.connect('mongodb://127.0.0.1:27017/test');\n  var collection = yield db.collection('test_insert');\n  yield collection.insert({ a: 2});\n\n  var count = yield collection.count();\n  console.log(count);\n\n  var docs = yield collection.find().toArray();\n  console.log(docs);\n\n  yield db.close();\n})();\n\n\n```\n\n## Notes\n\nNot all methods should be yielded, the rule is: if the methods accepts a callback (e.g. `collection.insert()`), yield it, if it doesn't (e.g. `collection.find()`) don't.\n\nBecause all methods have to be wrapped it does mean that when you do things wrong (miss a parameter for example) the error message sometimes isn't very useful. The solution is just to do it right :), check the mongo API, check the co-mongo tests.\n\nIt's not yet 100% API compatible, methods that are not implemented are marked as TODO in `lib/<class>.js`.\n\n## Extras\n\nBeyond the standard mongo methods, co-mongo also provides the following convenience methods, this is mainly inspired by [martinrue](https://twitter.com/martinrue)'s [congo](https://github.com/martinrue/congo) module.\n\n * `configure(options)`\n     - Set the default connection options\n     - Options:\n        - **host** `{string}` MongoDB host name (default: `127.0.0.1`)\n        - **port** `{int}` MongoDB port number (default: `27017`)\n        - **name** `{string}` MongoDB database name (default: `test`)\n        - **pool** `{int}` MongoDB poolSize (default: `5`)\n        - **collections** `{array[string]}` These collection will be attached, automatically, to the `db` object returned by `comongo.get()` (see example)\n\n * `get()`\n     - Returns a db object (see example)\n\n### Example\n\n```js\nvar comongo = require('co-mongo');\n\ncomongo.configure({\n    host: '127.0.0.1',\n    port: 27017,\n    name: 'mydb',\n    pool: 10,\n    collections: ['users', 'products', 'orders']\n});\n\nco(function *() {\n    var db = yield comongo.get();\n\n    // Collections attached to db object\n    var users db.users.find().toArray();\n    console.log(users);\n\n    yield db.close();\n})();\n```\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Thom Seddon\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/thomseddon/co-mongo/issues"
  },
  "homepage": "https://github.com/thomseddon/co-mongo",
  "_id": "co-mongo@0.0.2",
  "dist": {
    "shasum": "6abe5d1ae00ceb0726a4decd9d9152ce155ac214"
  },
  "_from": "co-mongo@",
  "_resolved": "https://registry.npmjs.org/co-mongo/-/co-mongo-0.0.2.tgz"
}
